# credit_calcul
package calc; /*	указываетпакет "pack", в котором находится файл класса
Пакет (package) — это некий контейнер, который используется для того, чтобы изолировать имена классов.
 */
import javax.swing.*; 
/*	Импортируем:
javax.* — стандартные расширения
(Стандартные расширения (standard extensions) — это наборы пакетов Java)
Swing Библиотека графического интерфейса (конкретный пакет),
"*"-включение всех элементов библиотеки Swing (jbutton,jpanel,jlabel и т.д.)
(точка) используется для выделения элементов из ссылки на объект.
"Звездочка" в конце javax.swing.* означает "включить все методы" */
public class calcul extends javax.swing.JFrame { 
/*	(Public) модификатор доступа, который позволяет управлять видимостью любого метода и любой переменной.
В данном случае модификатор доступа public означает, что класс calcul виден и доступен любому классу.
В этой строке использовано зарезервированное слово class.
Оно говорит транслятору, что собираемся описать новый класс calcul.
Описываем calcul как класс,доступный другим классам (public)
Класс на следует функции элемента JFrame, который определён в стандартной библиотеке calcul. 
Этот самый JFrame уже содержит в себе всё необходимое для создания и функционирования
окна программы - нам остаётся только использовать его методы в своей программе. */
	
	public calcul() {  /*Описание метода calcul
	метод видим и доступен для других классов (public)
	круглые скобки говорят о том что мы описываем метод и перед ними идет его название
	Внутри скобок можно указать данные (аргумерты или параметры), которые передаются методу */ 
   
		// Создание объектов графического интерфейса формы
		/* панель содержит поля в которые следует ввести данные необходимые для расчета кредита
		= new JPanel():  "=" - оператор присваивания переменной jPanel1,jPanel2  функций класса JPanel.
		Оператор new создает экземпляр указанного класса
		JPanel() - класс. Является компонентом-контейнером для содержания других частей интерфейса.*/	
        jPanel1 = new javax.swing.JPanel(); //jPanel1
        jPanel2 = new javax.swing.JPanel(); //jPanel2
        
        /* JTextField (текстовое поле) — позволяет пользователю вводить данные. 
         * Оператор new создает экземпляр указанного класса */
        creditsum = new javax.swing.JTextField(); // сумма кредита
        payment = new javax.swing.JTextField(); //ежемесячный платеж
        totalsum = new javax.swing.JTextField(); //сумма кредита
        percent = new javax.swing.JTextField(); //процентная ставка 
        
        creditperiod = new javax.swing.JComboBox(); /* JComboBox - элемент (виджет) графического интерфейса пользователя. 
        Сочетание выпадающего списка (раскрывающегося при щелчке мыши). Позволяет выбрать период кредитования
        Оператор new создает экземпляр указанного класса */
        
        /*JLabel (метка) — предназначен для описания (текстового или графического) элементов. 
        Оператор new создает экземпляр указанного класса */
        jLabel1 = new javax.swing.JLabel(); // cумма кредита
        jLabel2 = new javax.swing.JLabel(); //cрок кредитования
        jLabel3 = new javax.swing.JLabel(); // мес.
        jLabel4 = new javax.swing.JLabel(); //процентная ставка
        jLabel6 = new javax.swing.JLabel(); //%
        jLabel7 = new javax.swing.JLabel(); //cумма кредита
        jLabel5 = new javax.swing.JLabel(); //ежемесячный платеж
        
        /* JButton (кнопка) — основной активный компонент, позволяющий 
        выполнить какие-либо действия при ее нажатии.*/
        clearall = new javax.swing.JButton(); /* очистить все.
    	= new JButton():  "=" - оператор присваивания переменной  clearall функций класса JButton.
    	Оператор new создает экземпляр указанного класса. В скобках указана надпись содержащаяся на кнопке.*/
        calculate = new javax.swing.JButton(); /*рассчитать. 
        = new JButton():  "=" - оператор присваивания переменной  calculate функций класса JButton.
    	Оператор new создает экземпляр указанного класса. В скобках указана надпись содержащаяся на кнопке.*/ 
        clearresult = new javax.swing.JButton(); /*очистить результат. 
        = new JButton():  "=" - оператор присваивания переменной  clearresult функций класса JButton.
        Оператор new создает экземпляр указанного класса. В скобках указана надпись содержащаяся на кнопке.*/
        
        setTitle("Кредитный калькулятор"); //заголовок окна приложения. Метод setTitle() позволяет изменить текст в строке заголовка.
        setResizable(false); // метод  setResizable говорим о том, что пользователь не имеет права изменять размеры фрейма
        
        // задание параметров для компонентов  jLabel и ComboBox
        creditperiod.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "4", "6", "12", "24", "36", "48", "60" })); /*JComboBox - это компонент Java Swing, 
        который представляет собой выпадающий список. Оператор new создает экземпляр указанного класса.
        метод setModel принимает экземпляр класса DefaultComboBoxModel. Вы должны использовать этот метод для создания данных в JComboBox. */
        jLabel1.setText("Сумма кредита:"); /* setText означает написать текст в текстовое поле. Между кавычками ничего нет, 
        значит текстовое поле будет пустым для jLabel1*/  
        jLabel2.setText("Срок кредитования:"); /* setText означает написать текст в текстовое поле. Между кавычками ничего нет, 
        значит текстовое поле будет пустым для  jLabel2*/  
        jLabel3.setText("мес."); /* setText означает написать текст в текстовое поле. Между кавычками ничего нет, 
        значит текстовое поле будет пустым для  jLabel3*/  
        jLabel4.setText("Процентная ставка:");/* setText означает написать текст в текстовое поле. Между кавычками ничего нет, 
        значит текстовое поле будет пустым для  jLabel4*/  
        jLabel6.setText("%");/* setText означает написать текст в текстовое поле. Между кавычками ничего нет, 
        значит текстовое поле будет пустым*/  
        clearall.setText("Очистить всё"); /* setText означает написать текст в текстовое поле. Между кавычками ничего нет, 
        значит текстовое поле будет пустым для clearall*/  
        //очистить все введенные данные и результат рассчета
        clearall.addActionListener(new java.awt.event.ActionListener() { /*  clearall - кнопка "очистить результат"
    		"."  - указывает к какой переменной (кнопке) следует применить слушателя.
    		addActionListener - добавление слушателя ActionListener к кнопке
    		new - Оператор new создает экземпляр указанного класса
    		(Для того чтобы кнопки стали функциональными, каждой из них необходимо присвоить обработчик событий,
    		который будет отвечать зареагирование на события.
    		В нашем случае требуется идентифицировать событие нажатия кнопки – путем щелчка мышью.
    		Поэтому будет использоваться интерфейс "ActionListener",
    		предназначенный для обработки событий "ActionEvent".
    		тело интерфейса указывается ниже после фигурной скобки "{"
    		*/

